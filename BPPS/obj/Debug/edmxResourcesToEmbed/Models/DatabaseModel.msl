<?xml version="1.0" encoding="utf-8"?>
<Mapping Space="C-S" xmlns="http://schemas.microsoft.com/ado/2009/11/mapping/cs">
  <EntityContainerMapping StorageEntityContainer="ModelStoreContainer" CdmEntityContainer="Entities">
    <EntitySetMapping Name="C__MigrationHistory">
      <EntityTypeMapping TypeName="IsTypeOf(Model.C__MigrationHistory)">
        <MappingFragment StoreEntitySet="C__MigrationHistory">
          <ScalarProperty Name="MigrationId" ColumnName="MigrationId" />
          <ScalarProperty Name="ContextKey" ColumnName="ContextKey" />
          <ScalarProperty Name="Model" ColumnName="Model" />
          <ScalarProperty Name="ProductVersion" ColumnName="ProductVersion" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AspNetRoles">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AspNetRoles)">
        <MappingFragment StoreEntitySet="AspNetRoles">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Name" ColumnName="Name" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AspNetUserClaims">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AspNetUserClaims)">
        <MappingFragment StoreEntitySet="AspNetUserClaims">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="ClaimType" ColumnName="ClaimType" />
          <ScalarProperty Name="ClaimValue" ColumnName="ClaimValue" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AspNetUserLogins">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AspNetUserLogins)">
        <MappingFragment StoreEntitySet="AspNetUserLogins">
          <ScalarProperty Name="LoginProvider" ColumnName="LoginProvider" />
          <ScalarProperty Name="ProviderKey" ColumnName="ProviderKey" />
          <ScalarProperty Name="UserId" ColumnName="UserId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AspNetUsers">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AspNetUsers)">
        <MappingFragment StoreEntitySet="AspNetUsers">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="Email" ColumnName="Email" />
          <ScalarProperty Name="EmailConfirmed" ColumnName="EmailConfirmed" />
          <ScalarProperty Name="PasswordHash" ColumnName="PasswordHash" />
          <ScalarProperty Name="SecurityStamp" ColumnName="SecurityStamp" />
          <ScalarProperty Name="PhoneNumber" ColumnName="PhoneNumber" />
          <ScalarProperty Name="PhoneNumberConfirmed" ColumnName="PhoneNumberConfirmed" />
          <ScalarProperty Name="TwoFactorEnabled" ColumnName="TwoFactorEnabled" />
          <ScalarProperty Name="LockoutEndDateUtc" ColumnName="LockoutEndDateUtc" />
          <ScalarProperty Name="LockoutEnabled" ColumnName="LockoutEnabled" />
          <ScalarProperty Name="AccessFailedCount" ColumnName="AccessFailedCount" />
          <ScalarProperty Name="UserName" ColumnName="UserName" />
          <ScalarProperty Name="FirstName" ColumnName="FirstName" />
          <ScalarProperty Name="LastName" ColumnName="LastName" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="departments">
      <EntityTypeMapping TypeName="IsTypeOf(Model.departments)">
        <MappingFragment StoreEntitySet="departments">
          <ScalarProperty Name="department_id" ColumnName="department_id" />
          <ScalarProperty Name="location_id" ColumnName="location_id" />
          <ScalarProperty Name="name" ColumnName="name" />
          <ScalarProperty Name="dep_department_id" ColumnName="dep_department_id" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="feedback_questions">
      <EntityTypeMapping TypeName="IsTypeOf(Model.feedback_questions)">
        <MappingFragment StoreEntitySet="feedback_questions">
          <ScalarProperty Name="question_id" ColumnName="question_id" />
          <ScalarProperty Name="feedback_id" ColumnName="feedback_id" />
          <ScalarProperty Name="result" ColumnName="result" />
          <ScalarProperty Name="comment" ColumnName="comment" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="feedbacks">
      <EntityTypeMapping TypeName="IsTypeOf(Model.feedbacks)">
        <MappingFragment StoreEntitySet="feedbacks">
          <ScalarProperty Name="feedback_id" ColumnName="feedback_id" />
          <ScalarProperty Name="initiated" ColumnName="initiated" />
          <ScalarProperty Name="received" ColumnName="received" />
          <ScalarProperty Name="project_id" ColumnName="project_id" />
          <ScalarProperty Name="Id" ColumnName="Id" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="locations">
      <EntityTypeMapping TypeName="IsTypeOf(Model.locations)">
        <MappingFragment StoreEntitySet="locations">
          <ScalarProperty Name="location_id" ColumnName="location_id" />
          <ScalarProperty Name="town" ColumnName="town" />
          <ScalarProperty Name="country" ColumnName="country" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Projects">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Projects)">
        <MappingFragment StoreEntitySet="Projects">
          <ScalarProperty Name="project_id" ColumnName="project_id" />
          <ScalarProperty Name="acronym" ColumnName="acronym" />
          <ScalarProperty Name="name" ColumnName="name" />
          <ScalarProperty Name="description" ColumnName="description" />
          <ScalarProperty Name="start_date" ColumnName="start_date" />
          <ScalarProperty Name="end_date" ColumnName="end_date" />
          <ScalarProperty Name="status" ColumnName="status" />
          <ScalarProperty Name="department_id" ColumnName="department_id" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="questions">
      <EntityTypeMapping TypeName="IsTypeOf(Model.questions)">
        <MappingFragment StoreEntitySet="questions">
          <ScalarProperty Name="question_id" ColumnName="question_id" />
          <ScalarProperty Name="question" ColumnName="question" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Table">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Table)">
        <MappingFragment StoreEntitySet="Table">
          <ScalarProperty Name="Id" ColumnName="Id" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="Users_projects">
      <EntityTypeMapping TypeName="IsTypeOf(Model.Users_projects)">
        <MappingFragment StoreEntitySet="Users_projects">
          <ScalarProperty Name="Id" ColumnName="Id" />
          <ScalarProperty Name="project_id" ColumnName="project_id" />
          <ScalarProperty Name="project_role" ColumnName="project_role" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="userRoles">
      <EntityTypeMapping TypeName="IsTypeOf(Model.userRoles)">
        <MappingFragment StoreEntitySet="userRoles">
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="RoleId" ColumnName="RoleId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="AspNetUserRoles">
      <EntityTypeMapping TypeName="IsTypeOf(Model.AspNetUserRoles)">
        <MappingFragment StoreEntitySet="AspNetUserRoles">
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="RoleId" ColumnName="RoleId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
    <EntitySetMapping Name="userRoles1Set">
      <EntityTypeMapping TypeName="IsTypeOf(Model.userRoles1)">
        <MappingFragment StoreEntitySet="userRoles1Set">
          <ScalarProperty Name="UserId" ColumnName="UserId" />
          <ScalarProperty Name="RoleId" ColumnName="RoleId" />
        </MappingFragment>
      </EntityTypeMapping>
    </EntitySetMapping>
  </EntityContainerMapping>
</Mapping>